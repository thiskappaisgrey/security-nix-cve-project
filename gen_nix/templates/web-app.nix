{
  inputs.nixpkgs.url = $url;
  description= "Web app template flake";

  outputs = { self, nixpkgs, ... }:
    let
      system = "x86_64-linux";
      pkgs = import nixpkgs { inherit system; };

      python = pkgs.python3.withPackages (p: with p; [ $pythonPackages ]);

      # python writer without checks!
      pythonWriter = pkgs.writers.makeScriptWriter {
        interpreter = "$${python}/bin/python3";
      };

      # assume the exploit is in th edir as "exploit.py"
      exploit = pythonWriter "/bin/exploit" (builtins.readFile ./exploit.py);
    in {

      # Enable python
      devShells."$${system}".default = pkgs.mkShell {
	      packages = [ python ]; 
      };
      nixosModules.module = { pkgs, ... }: {
        system.stateVersion = "23.05";
        boot.isContainer = true;

        environment.systemPackages = [ exploit python ];
        services.$appname = {
		$config
        };
        networking.firewall.allowedTCPPorts = [ $portsToOpen ];

      };

      nixosConfigurations.minio = nixpkgs.lib.nixosSystem {
        system = "x86_64-linux";
        modules = [ self.nixosModules.module ];
      };
      # This output is for building the documentation
      # You can ignore it
      docsJSON = let
        release =
          import (builtins.toPath "$${nixpkgs.outPath}/nixos/release.nix");
      in (release { }).options;
      #
      # nixosConfigurations.
    };

}
